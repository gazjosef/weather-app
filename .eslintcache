[{"/Users/garethhind/Documents/Github/weather-app/src/index.js":"1","/Users/garethhind/Documents/Github/weather-app/src/App.js":"2","/Users/garethhind/Documents/Github/weather-app/src/components/pages/mobile/Mobile.js":"3","/Users/garethhind/Documents/Github/weather-app/src/components/weatherApp/WeatherApp.js":"4","/Users/garethhind/Documents/Github/weather-app/src/components/layout/mainInfo/MainInfo.js":"5","/Users/garethhind/Documents/Github/weather-app/src/components/layout/weatherIcon/WeatherIcon.js":"6","/Users/garethhind/Documents/Github/weather-app/src/components/layout/cityDate/CityDate.js":"7","/Users/garethhind/Documents/Github/weather-app/src/components/iPhone/iPhone.js":"8","/Users/garethhind/Documents/Github/weather-app/src/components/weather/Weather.js":"9","/Users/garethhind/Documents/Github/weather-app/src/components/layout/Forecast.js":"10","/Users/garethhind/Documents/Github/weather-app/src/components/layout/MainWindow.js":"11"},{"size":197,"mtime":1633174986617,"results":"12","hashOfConfig":"13"},{"size":244,"mtime":1633238179216,"results":"14","hashOfConfig":"13"},{"size":720,"mtime":1633237419574,"results":"15","hashOfConfig":"13"},{"size":4542,"mtime":1633238676753,"results":"16","hashOfConfig":"13"},{"size":587,"mtime":1611648754765,"results":"17","hashOfConfig":"13"},{"size":413,"mtime":1611648754768,"results":"18","hashOfConfig":"13"},{"size":394,"mtime":1611648754759,"results":"19","hashOfConfig":"13"},{"size":707,"mtime":1633238799343,"results":"20","hashOfConfig":"13"},{"size":4712,"mtime":1633259621121,"results":"21","hashOfConfig":"13"},{"size":121,"mtime":1633241686139,"results":"22","hashOfConfig":"13"},{"size":1695,"mtime":1633309033013,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"na9mby",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/garethhind/Documents/Github/weather-app/src/index.js",[],["50","51"],"/Users/garethhind/Documents/Github/weather-app/src/App.js",["52"],"import \"./App.scss\";\n\nimport { Mobile } from \"./components/pages/mobile/Mobile\";\nimport IPhone from \"./components/iPhone/iPhone\";\n\nfunction App() {\n  return (\n    <>\n      {/* <Mobile /> */}\n      <IPhone />\n    </>\n  );\n}\n\nexport default App;\n","/Users/garethhind/Documents/Github/weather-app/src/components/pages/mobile/Mobile.js",[],"/Users/garethhind/Documents/Github/weather-app/src/components/weatherApp/WeatherApp.js",["53","54","55","56","57","58","59","60","61","62","63","64"],"import React, { useState, useEffect } from \"react\";\n\nimport { CityDate } from \"../layout/cityDate/CityDate\";\nimport { MainInfo } from \"../layout/mainInfo/MainInfo\";\nimport { WeatherIcon } from \"../layout/weatherIcon/WeatherIcon\";\n\nconst API_KEY = \"4a64ed09d073cdac231c53e1a3b62181\";\n\nexport const WeatherApp = () => {\n  const [background, setBackground] = useState(\"sky-gradient-11\");\n  const [city, setCity] = useState();\n  const [country, setCountry] = useState();\n  // const [date, setDate] = useState()\n  const [description, setDescription] = useState();\n  const [feelslike, setFeelslike] = useState();\n  const [humidity, setHumidity] = useState();\n  const [icon, setIcon] = useState();\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const [sunrise, setSunrise] = useState();\n  const [sunset, setSunset] = useState();\n  const [temp_min, setTemp_min] = useState();\n  const [temp_max, setTemp_max] = useState();\n  const [temperature, setTemperature] = useState(0);\n  const [time, setTime] = useState();\n  const [wind, setWind] = useState();\n  const [windDegrees, setWindDegrees] = useState();\n\n  useEffect(() => {\n    const getWeather = async (e) => {\n      const api_call = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=sydney,au&appid=${API_KEY}&units=metric`\n      );\n\n      const data = await api_call.json();\n\n      console.log(data);\n\n      // setBackground(backgroundConverter(data.weather[0].icon));\n      setCity(data.name);\n      setCountry(data.sys.country);\n      // setDate(data.dt)\n      setDescription(data.weather[0].description);\n      setFeelslike(data.main.feels_like);\n      setHumidity(data.main.humidity);\n      setIcon(iconConverter(data.weather[0].icon));\n      setLatitude(data.coord.lat);\n      setLongitude(data.coord.lon);\n      setSunrise(timeConverter(data.sys.sunrise));\n      setSunset(timeConverter(data.sys.sunset));\n      setTemp_min(data.main.temp_min);\n      setTemp_max(data.main.temp_max);\n      setTemperature(Math.floor(data.main.temp));\n      setTime(timeConverter(data.dt));\n      setWind(data.wind.speed);\n      setWindDegrees(data.wind.deg);\n    };\n    getWeather();\n  }, []);\n\n  const backgroundConverter = (icon) => {\n    const weatherBackground = {\n      \"01d\": \"sky-gradient-11\",\n      \"02d\": \"sky-gradient-09\",\n      \"03d\": \"sky-gradient-13\",\n      \"04d\": \"sky-gradient-14\",\n      \"09d\": \"sky-gradient-14\",\n      \"10d\": \"sky-gradient-15\",\n      \"11d\": \"sky-gradient-15\",\n      \"13d\": \"sky-gradient-09\",\n      \"50d\": \"sky-gradient-08\",\n      \"01n\": \"sky-gradient-05\",\n      \"02n\": \"sky-gradient-21\",\n      \"03n\": \"sky-gradient-03\",\n      \"04n\": \"sky-gradient-03\",\n      \"09n\": \"sky-gradient-22\",\n      \"10n\": \"sky-gradient-03\",\n      \"11n\": \"sky-gradient-21\",\n      \"13n\": \"sky-gradient-02\",\n      \"50n\": \"sky-gradient-20\",\n    };\n\n    return weatherBackground[icon];\n  };\n\n  const iconConverter = (icon) => {\n    const convertIcon = {\n      \"01d\": \"sun-solid\",\n      \"02d\": \"cloud-sun-solid\",\n      \"03d\": \"cloud-solid\",\n      \"04d\": \"cloud-solid\",\n      \"09d\": \"cloud-sun-rain-solid\",\n      \"10d\": \"cloud-showers-heavy-solid\",\n      \"11d\": \"poo-storm-solid\",\n      \"13d\": \"snowflake-solid\",\n      \"50d\": \"smog-solid\",\n      \"01n\": \"moon-solid\",\n      \"02n\": \"cloud-moon-solid\",\n      \"03n\": \"cloud-solid\",\n      \"04n\": \"cloud-solid\",\n      \"09n\": \"cloud-moon-rain-solid\",\n      \"10n\": \"cloud-showers-heavy-solid\",\n      \"11n\": \"poo-storm-solid\",\n      \"13n\": \"snowflake-solid\",\n      \"50n\": \"smog-solid\",\n    };\n    return convertIcon[icon];\n  };\n\n  const timeConverter = (UNIX_timestamp) => {\n    let a = new Date(UNIX_timestamp * 1000);\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    let year = a.getFullYear();\n    let month = months[a.getMonth()];\n    let day = a.getDate();\n    let hour = a.getHours();\n    let min = (\"0\" + a.getMinutes()).slice(-2);\n    // let sec = a.getSeconds();\n    let time = day + \" \" + month + \" \" + year + \" \" + hour + \":\" + min;\n    return time;\n  };\n\n  return (\n    <div className={`screen ${background}`}>\n      <div className=\"weather-display\">\n        <CityDate\n          city={city}\n          country={country}\n          // date={date}\n          time={time}\n        />\n        <WeatherIcon icon={icon} description={description} />\n        <MainInfo temperature={temperature} description={description} />\n      </div>\n    </div>\n  );\n};\n","/Users/garethhind/Documents/Github/weather-app/src/components/layout/mainInfo/MainInfo.js",[],"/Users/garethhind/Documents/Github/weather-app/src/components/layout/weatherIcon/WeatherIcon.js",[],"/Users/garethhind/Documents/Github/weather-app/src/components/layout/cityDate/CityDate.js",[],"/Users/garethhind/Documents/Github/weather-app/src/components/iPhone/iPhone.js",[],"/Users/garethhind/Documents/Github/weather-app/src/components/weather/Weather.js",["65","66","67","68","69","70","71","72","73","74","75","76"],"import React, { useState, useEffect } from \"react\";\n\nimport MainWindow from \"../layout/MainWindow\";\nimport Forecast from \"../layout/Forecast\";\n\nconst API_KEY = \"4a64ed09d073cdac231c53e1a3b62181\";\n\nexport default function Weather() {\n  // Get Weather State\n  const [background, setBackground] = useState(\"sky-gradient-11\");\n  const [city, setCity] = useState();\n  const [country, setCountry] = useState();\n  const [description, setDescription] = useState();\n  const [feelslike, setFeelslike] = useState();\n  const [humidity, setHumidity] = useState();\n  const [icon, setIcon] = useState();\n  const [latitude, setLatitude] = useState();\n  const [longitude, setLongitude] = useState();\n  const [sunrise, setSunrise] = useState();\n  const [sunset, setSunset] = useState();\n  const [temp_min, setTemp_min] = useState();\n  const [temp_max, setTemp_max] = useState();\n  const [temperature, setTemperature] = useState(0);\n  const [time, setTime] = useState();\n  const [wind, setWind] = useState();\n  const [windDegrees, setWindDegrees] = useState();\n\n  useEffect(() => {\n    const getWeather = async (e) => {\n      const api_call = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=sydney,au&appid=${API_KEY}&units=metric`\n      );\n\n      const data = await api_call.json();\n\n      console.table(data);\n\n      setBackground(backgroundConverter(data.weather[0].icon));\n      setCity(data.name);\n      setCountry(data.sys.country);\n      setDescription(data.weather[0].description);\n      setFeelslike(data.main.feels_like);\n      setHumidity(data.main.humidity);\n      setIcon(iconConverter(data.weather[0].icon));\n      setLatitude(data.coord.lat);\n      setLongitude(data.coord.lon);\n      setSunrise(timeConverter(data.sys.sunrise));\n      setSunset(timeConverter(data.sys.sunset));\n      setTemp_min(data.main.temp_min);\n      setTemp_max(data.main.temp_max);\n      setTemperature(Math.floor(data.main.temp));\n      setTime(timeConverter(data.dt));\n      setWind(data.wind.speed);\n      setWindDegrees(data.wind.deg);\n    };\n    getWeather();\n  }, []);\n\n  const backgroundConverter = (icon) => {\n    const weatherBackground = {\n      \"01d\": \"sky-gradient-11\",\n      \"02d\": \"sky-gradient-09\",\n      \"03d\": \"sky-gradient-13\",\n      \"04d\": \"sky-gradient-14\",\n      \"09d\": \"sky-gradient-14\",\n      \"10d\": \"sky-gradient-15\",\n      \"11d\": \"sky-gradient-15\",\n      \"13d\": \"sky-gradient-09\",\n      \"50d\": \"sky-gradient-08\",\n      \"01n\": \"sky-gradient-05\",\n      \"02n\": \"sky-gradient-21\",\n      \"03n\": \"sky-gradient-03\",\n      \"04n\": \"sky-gradient-03\",\n      \"09n\": \"sky-gradient-22\",\n      \"10n\": \"sky-gradient-03\",\n      \"11n\": \"sky-gradient-21\",\n      \"13n\": \"sky-gradient-02\",\n      \"50n\": \"sky-gradient-20\",\n    };\n\n    return weatherBackground[icon];\n  };\n\n  const iconConverter = (icon) => {\n    const convertIcon = {\n      \"01d\": \"sun-solid\",\n      \"02d\": \"cloud-sun-solid\",\n      \"03d\": \"cloud-solid\",\n      \"04d\": \"cloud-solid\",\n      \"09d\": \"cloud-sun-rain-solid\",\n      \"10d\": \"cloud-showers-heavy-solid\",\n      \"11d\": \"poo-storm-solid\",\n      \"13d\": \"snowflake-solid\",\n      \"50d\": \"smog-solid\",\n      \"01n\": \"moon-solid\",\n      \"02n\": \"cloud-moon-solid\",\n      \"03n\": \"cloud-solid\",\n      \"04n\": \"cloud-solid\",\n      \"09n\": \"cloud-moon-rain-solid\",\n      \"10n\": \"cloud-showers-heavy-solid\",\n      \"11n\": \"poo-storm-solid\",\n      \"13n\": \"snowflake-solid\",\n      \"50n\": \"smog-solid\",\n    };\n    return convertIcon[icon];\n  };\n\n  const timeConverter = (UNIX_timestamp) => {\n    let a = new Date(UNIX_timestamp * 1000);\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\",\n    ];\n    let year = a.getFullYear();\n    let month = months[a.getMonth()];\n    let day = a.getDate();\n    let hour = a.getHours();\n    let min = (\"0\" + a.getMinutes()).slice(-2);\n    // let sec = a.getSeconds();\n    let time = day + \" \" + month + \" \" + year + \" \" + hour + \":\" + min;\n\n    return time;\n  };\n\n  useEffect(() => {\n    const getFiveDay = async (e) => {\n      const api_call = await fetch(\n        `https://api.openweathermap.org/data/2.5/forecast?q=sydney,nsw&appid=${API_KEY}`\n      );\n\n      const fiveDayData = await api_call.json();\n\n      console.log(fiveDayData);\n    };\n    getFiveDay();\n  }, []);\n\n  return (\n    <div className=\"screen\">\n      <div className=\"weather-app\">\n        <div className=\"weather-app__title\">\n          <h1>\n            {city}, {country}\n          </h1>\n        </div>\n\n        <MainWindow\n          icon={icon}\n          description={description}\n          temperature={temperature}\n        />\n\n        <Forecast />\n      </div>\n    </div>\n  );\n}\n","/Users/garethhind/Documents/Github/weather-app/src/components/layout/Forecast.js",[],"/Users/garethhind/Documents/Github/weather-app/src/components/layout/MainWindow.js",[],{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":3,"column":10,"nodeType":"83","messageId":"84","endLine":3,"endColumn":16},{"ruleId":"81","severity":1,"message":"85","line":10,"column":22,"nodeType":"83","messageId":"84","endLine":10,"endColumn":35},{"ruleId":"81","severity":1,"message":"86","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":19},{"ruleId":"81","severity":1,"message":"87","line":16,"column":10,"nodeType":"83","messageId":"84","endLine":16,"endColumn":18},{"ruleId":"81","severity":1,"message":"88","line":18,"column":10,"nodeType":"83","messageId":"84","endLine":18,"endColumn":18},{"ruleId":"81","severity":1,"message":"89","line":19,"column":10,"nodeType":"83","messageId":"84","endLine":19,"endColumn":19},{"ruleId":"81","severity":1,"message":"90","line":20,"column":10,"nodeType":"83","messageId":"84","endLine":20,"endColumn":17},{"ruleId":"81","severity":1,"message":"91","line":21,"column":10,"nodeType":"83","messageId":"84","endLine":21,"endColumn":16},{"ruleId":"81","severity":1,"message":"92","line":22,"column":10,"nodeType":"83","messageId":"84","endLine":22,"endColumn":18},{"ruleId":"81","severity":1,"message":"93","line":23,"column":10,"nodeType":"83","messageId":"84","endLine":23,"endColumn":18},{"ruleId":"81","severity":1,"message":"94","line":26,"column":10,"nodeType":"83","messageId":"84","endLine":26,"endColumn":14},{"ruleId":"81","severity":1,"message":"95","line":27,"column":10,"nodeType":"83","messageId":"84","endLine":27,"endColumn":21},{"ruleId":"81","severity":1,"message":"96","line":61,"column":9,"nodeType":"83","messageId":"84","endLine":61,"endColumn":28},{"ruleId":"81","severity":1,"message":"97","line":10,"column":10,"nodeType":"83","messageId":"84","endLine":10,"endColumn":20},{"ruleId":"81","severity":1,"message":"86","line":14,"column":10,"nodeType":"83","messageId":"84","endLine":14,"endColumn":19},{"ruleId":"81","severity":1,"message":"87","line":15,"column":10,"nodeType":"83","messageId":"84","endLine":15,"endColumn":18},{"ruleId":"81","severity":1,"message":"88","line":17,"column":10,"nodeType":"83","messageId":"84","endLine":17,"endColumn":18},{"ruleId":"81","severity":1,"message":"89","line":18,"column":10,"nodeType":"83","messageId":"84","endLine":18,"endColumn":19},{"ruleId":"81","severity":1,"message":"90","line":19,"column":10,"nodeType":"83","messageId":"84","endLine":19,"endColumn":17},{"ruleId":"81","severity":1,"message":"91","line":20,"column":10,"nodeType":"83","messageId":"84","endLine":20,"endColumn":16},{"ruleId":"81","severity":1,"message":"92","line":21,"column":10,"nodeType":"83","messageId":"84","endLine":21,"endColumn":18},{"ruleId":"81","severity":1,"message":"93","line":22,"column":10,"nodeType":"83","messageId":"84","endLine":22,"endColumn":18},{"ruleId":"81","severity":1,"message":"98","line":24,"column":10,"nodeType":"83","messageId":"84","endLine":24,"endColumn":14},{"ruleId":"81","severity":1,"message":"94","line":25,"column":10,"nodeType":"83","messageId":"84","endLine":25,"endColumn":14},{"ruleId":"81","severity":1,"message":"95","line":26,"column":10,"nodeType":"83","messageId":"84","endLine":26,"endColumn":21},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'Mobile' is defined but never used.","Identifier","unusedVar","'setBackground' is assigned a value but never used.","'feelslike' is assigned a value but never used.","'humidity' is assigned a value but never used.","'latitude' is assigned a value but never used.","'longitude' is assigned a value but never used.","'sunrise' is assigned a value but never used.","'sunset' is assigned a value but never used.","'temp_min' is assigned a value but never used.","'temp_max' is assigned a value but never used.","'wind' is assigned a value but never used.","'windDegrees' is assigned a value but never used.","'backgroundConverter' is assigned a value but never used.","'background' is assigned a value but never used.","'time' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]