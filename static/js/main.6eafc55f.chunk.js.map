{"version":3,"sources":["Components/WeatherIcon/icons sync /^/.*/.svg$","Components/WeatherIcon/icons/bolt-solid.svg","Components/WeatherIcon/icons/cloud-moon-rain-solid.svg","Components/WeatherIcon/icons/cloud-moon-solid.svg","Components/WeatherIcon/icons/cloud-showers-heavy-solid.svg","Components/WeatherIcon/icons/cloud-solid.svg","Components/WeatherIcon/icons/cloud-sun-rain-solid.svg","Components/WeatherIcon/icons/cloud-sun-solid.svg","Components/WeatherIcon/icons/moon-solid.svg","Components/WeatherIcon/icons/poo-storm-solid.svg","Components/WeatherIcon/icons/smog-solid.svg","Components/WeatherIcon/icons/snowflake-solid.svg","Components/WeatherIcon/icons/sun-solid.svg","Components/WeatherIcon/icons/temperature-high-solid.svg","Components/WeatherIcon/icons/temperature-low-solid.svg","Components/WeatherIcon/icons/water-solid.svg","Components/WeatherIcon/icons/wind-solid.svg","Components/SearchField/SearchField.tsx","Components/MainInfo/MainInfo.tsx","Components/CityDate/CityDate.tsx","Components/WeatherIcon/WeatherIcon.tsx","App.tsx","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SearchField","props","onSubmit","getWeather","className","type","placeholder","MainInfo","temperature","description","CityDate","city","country","time","WeatherIcon","undefined","icon","src","require","alt","App","state","date","humidity","wind","temp_min","temp_max","error","background","latitude","longitude","a","preventDefault","target","elements","value","fetch","process","api_call","json","data","setState","main","temp","name","sys","timeConverter","dt","iconConverter","weather","speed","backgroundConverter","coord","lat","lon","getTimeZone","zone","formatted","long","timezone_api_call","UNIX_timestamp","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6eafc55f.chunk.js","sourcesContent":["var map = {\n\t\"./bolt-solid.svg\": 24,\n\t\"./cloud-moon-rain-solid.svg\": 25,\n\t\"./cloud-moon-solid.svg\": 26,\n\t\"./cloud-showers-heavy-solid.svg\": 27,\n\t\"./cloud-solid.svg\": 28,\n\t\"./cloud-sun-rain-solid.svg\": 29,\n\t\"./cloud-sun-solid.svg\": 30,\n\t\"./moon-solid.svg\": 31,\n\t\"./poo-storm-solid.svg\": 32,\n\t\"./smog-solid.svg\": 33,\n\t\"./snowflake-solid.svg\": 34,\n\t\"./sun-solid.svg\": 35,\n\t\"./temperature-high-solid.svg\": 36,\n\t\"./temperature-low-solid.svg\": 37,\n\t\"./water-solid.svg\": 38,\n\t\"./wind-solid.svg\": 39\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 23;","module.exports = __webpack_public_path__ + \"static/media/bolt-solid.42de93f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-moon-rain-solid.605657a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-moon-solid.7c556317.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-showers-heavy-solid.904783b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-solid.3052c53b.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-sun-rain-solid.52915221.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-sun-solid.e4a580d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon-solid.399b1420.svg\";","module.exports = __webpack_public_path__ + \"static/media/poo-storm-solid.eb9ea3c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/smog-solid.c791d5cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake-solid.d9f64049.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun-solid.aa59b8a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/temperature-high-solid.1de813e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/temperature-low-solid.dcbbcdd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/water-solid.ab90635d.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind-solid.b3304a3d.svg\";","import React from \"react\";\r\nimport \"./SearchField.css\";\r\n\r\nconst SearchField = (props: any) => (\r\n  <form onSubmit={props.getWeather} className=\"form-inline searchField\">\r\n    <input\r\n      className=\"form-control mr-2\"\r\n      type=\"text\"\r\n      id=\"city\"\r\n      placeholder=\"City\"\r\n    />\r\n    <input\r\n      className=\"form-control mr-2\"\r\n      type=\"text\"\r\n      id=\"country\"\r\n      placeholder=\"Country Code\"\r\n    />\r\n\r\n    <button id=\"get\" className=\"btn btn-light\" type=\"submit\">\r\n      Search\r\n    </button>\r\n  </form>\r\n);\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport \"./MainInfo.css\";\r\n\r\nconst MainInfo = (props: any) => (\r\n  <div id=\"main-info\">\r\n    <div className=\"text-left px-3\">\r\n      {props.temperature && (\r\n        <p className=\"main-key\">\r\n          Temperature:{\" \"}\r\n          <span className=\"main-value\">\r\n            {props.temperature}\r\n            <sup>&deg;</sup>\r\n            <span className=\"unit\">C</span>\r\n          </span>\r\n        </p>\r\n      )}\r\n      {props.description && (\r\n        <p className=\"main-key\">\r\n          Conditions: <span className=\"main-value\">{props.description}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MainInfo;\r\n","import React from \"react\";\r\nimport \"./CityDate.css\";\r\n\r\nconst CityDate = (props: any) => (\r\n  <div id=\"cityAndDate\" className=\"text-center\">\r\n    <div className=\"city\">\r\n      {props.city && props.country && (\r\n        <p>\r\n          {props.city}, {props.country}\r\n        </p>\r\n      )}\r\n    </div>\r\n    <div className=\"date\">{props.time && <p>{props.time}</p>}</div>\r\n  </div>\r\n);\r\n\r\nexport default CityDate;\r\n","import React from \"react\";\r\nimport \"./WeatherIcon.css\";\r\n\r\nconst WeatherIcon = (props: any) => {\r\n  if (props.icon !== undefined) {\r\n    return (\r\n      <div id=\"weather-icon\">\r\n        <img\r\n          src={require(`./icons/${props.icon}.svg`)}\r\n          alt={props.description}\r\n          className=\"filter-white\"\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div id=\"weather-icon\" />;\r\n  }\r\n};\r\n\r\nexport default WeatherIcon;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport \"./iPhone.css\";\nimport \"./weather-background.css\";\n\n// LAYOUT\nimport SearchField from \"./Components/SearchField/SearchField\"\n// import SecondaryInfo from \"./Components/SecondaryInfo/SecondaryInfo\";\nimport MainInfo from \"./Components/MainInfo/MainInfo\";\nimport CityDate from \"./Components/CityDate/CityDate\";\nimport WeatherIcon from \"./Components/WeatherIcon/WeatherIcon\";\n\nclass App extends Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    date: undefined,\n    icon: undefined,\n    humidity: undefined,\n    wind: undefined,\n    temp_min: undefined,\n    temp_max: undefined,\n    description: undefined,\n    error: undefined,\n    background: \"sky-gradient-11\",\n    latitude: undefined,\n    longitude: undefined,\n    time: undefined\n  };\n\n  timeConverter(UNIX_timestamp: number) {\n    let a = new Date(UNIX_timestamp * 1000);\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    let year = a.getFullYear();\n    let month = months[a.getMonth()];\n    let date = a.getDate();\n    let hour = a.getHours();\n    let min = a.getMinutes();\n    // let sec = a.getSeconds();\n    let time = date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min;\n    return time;\n  }\n\n  iconConverter(icon: string) {\n    const convertIcon: any = {\n      \"01d\": \"sun-solid\",\n      \"02d\": \"cloud-sun-solid\",\n      \"03d\": \"cloud-solid\",\n      \"04d\": \"cloud-solid\",\n      \"09d\": \"cloud-sun-rain-solid\",\n      \"10d\": \"cloud-showers-heavy-solid\",\n      \"11d\": \"poo-storm-solid\",\n      \"13d\": \"snowflake-solid\",\n      \"50d\": \"smog-solid\",\n      \"01n\": \"moon-solid\",\n      \"02n\": \"cloud-moon-solid\",\n      \"03n\": \"cloud-solid\",\n      \"04n\": \"cloud-solid\",\n      \"09n\": \"cloud-moon-rain-solid\",\n      \"10n\": \"cloud-showers-heavy-solid\",\n      \"11n\": \"poo-storm-solid\",\n      \"13n\": \"snowflake-solid\",\n      \"50n\": \"smog-solid\"\n    };\n    return convertIcon[icon];\n  }\n\n  getWeather = async (e: any) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${process.env.REACT_APP_OPEN_WEATHER_API_KEY}&units=metric`\n    );\n    const data = await api_call.json();\n\n    if (city && country) {\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        date: this.timeConverter(data.dt),\n        icon: this.iconConverter(data.weather[0].icon),\n        humidity: data.main.humidity,\n        wind: data.wind.speed,\n        temp_min: data.main.temp_min,\n        temp_max: data.main.temp_max,\n        description: data.weather[0].description,\n        background: this.backgroundConverter(data.weather[0].icon),\n        latitude: data.coord.lat,\n        longitude: data.coord.lon\n      });\n      const zone = await this.getTimeZone();\n      this.setState({\n        time: zone.formatted\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        date: undefined,\n        icon: undefined,\n        humidity: undefined,\n        wind: undefined,\n        temp_min: undefined,\n        temp_max: undefined,\n        description: undefined,\n        background: undefined,\n        latitude: undefined,\n        longitude: undefined\n      });\n    }\n  };\n\n  getTimeZone = async () => {\n    const { latitude, longitude } = this.state;\n    const lat = latitude;\n    const long = longitude;\n\n    const timezone_api_call = await fetch(\n      `https://api.timezonedb.com/v2.1/get-time-zone?key=${process.env.REACT_APP_TIMEZONEDB_API_KEY}&format=json&by=position&lat=${lat}&lng=${long}`\n    );\n    const zone = await timezone_api_call.json();\n\n    return zone;\n  };\n\n  backgroundConverter(icon: string) {\n    const weatherBackground: any = {\n      \"01d\": \"sky-gradient-11\",\n      \"02d\": \"sky-gradient-09\",\n      \"03d\": \"sky-gradient-13\",\n      \"04d\": \"sky-gradient-14\",\n      \"09d\": \"sky-gradient-14\",\n      \"10d\": \"sky-gradient-15\",\n      \"11d\": \"sky-gradient-15\",\n      \"13d\": \"sky-gradient-09\",\n      \"50d\": \"sky-gradient-08\",\n      \"01n\": \"sky-gradient-05\",\n      \"02n\": \"sky-gradient-21\",\n      \"03n\": \"sky-gradient-03\",\n      \"04n\": \"sky-gradient-03\",\n      \"09n\": \"sky-gradient-22\",\n      \"10n\": \"sky-gradient-03\",\n      \"11n\": \"sky-gradient-21\",\n      \"13n\": \"sky-gradient-02\",\n      \"50n\": \"sky-gradient-20\"\n    };\n    return weatherBackground[icon];\n  }\n\n  render() {\n    const {\n      background,\n      city,\n      country,\n      // date,\n      description,\n      icon,\n      temperature,\n      time\n    } = this.state;\n    return (\n      <div className=\"wrapper\">\n        <div className=\"center\">\n          {/* iPhone / iPad */}\n          <div className=\"mobile\">\n            {/* Screen */}\n            <div className={`screen ${background}`}>\n\n              <SearchField getWeather={this.getWeather} />\n              <div className=\"weather-display\">\n                <CityDate\n                  city={city}\n                  country={country}\n                  // date={date}\n                  time={time}\n                />\n                <WeatherIcon icon={icon} description={description} />\n                <MainInfo temperature={temperature} description={description} />\n              </div>\n\n            </div>\n            {/* Home Button */}\n            <div className=\"home\"></div>\n            <div className=\"inner\"></div>\n            {/* Volume */}\n            <ul className=\"volume\">\n              <li></li>\n              <li></li>\n            </ul>\n            <ul className=\"silent\">\n              <li></li>\n            </ul>\n            <ul className=\"sleep\">\n              <li></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}