{"version":3,"sources":["assets/icons sync /^/.//.*/.svg$","assets/icons/bolt-solid.svg","assets/icons/cloud-moon-rain-solid.svg","assets/icons/cloud-moon-solid.svg","assets/icons/cloud-showers-heavy-solid.svg","assets/icons/cloud-solid.svg","assets/icons/cloud-sun-rain-solid.svg","assets/icons/cloud-sun-solid.svg","assets/icons/moon-solid.svg","assets/icons/poo-storm-solid.svg","assets/icons/smog-solid.svg","assets/icons/snowflake-solid.svg","assets/icons/sun-solid.svg","assets/icons/temperature-high-solid.svg","assets/icons/temperature-low-solid.svg","assets/icons/water-solid.svg","assets/icons/wind-solid.svg","components/layout/cityDate/CityDate.js","components/layout/mainInfo/MainInfo.js","components/layout/searchField/SearchField.js","components/layout/weatherIcon/WeatherIcon.js","components/weatherApp/WeatherApp.js","components/pages/mobile/Mobile.js","App.js","index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","CityDate","props","className","city","country","time","MainInfo","temperature","description","SearchField","onSubmit","getWeather","type","placeholder","WeatherIcon","undefined","icon","src","require","default","alt","API_KEY","WeatherApp","useState","background","setBackground","setCity","setCountry","setDescription","feelslike","setFeelslike","humidity","setHumidity","setIcon","latitude","setLatitude","longitude","setLongitude","sunrise","setSunrise","sunset","setSunset","temp_min","setTemp_min","temp_max","setTemp_max","setTemperature","setTime","wind","setWind","windDegrees","setWindDegrees","useEffect","a","fetch","api_call","json","data","console","log","backgroundConverter","weather","name","sys","main","feels_like","iconConverter","coord","lat","lon","timeConverter","Math","floor","temp","dt","speed","deg","UNIX_timestamp","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","slice","preventDefault","target","elements","value","Mobile","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae4eac90.chunk.js","sourcesContent":["var map = {\n\t\"./bolt-solid.svg\": 16,\n\t\"./cloud-moon-rain-solid.svg\": 17,\n\t\"./cloud-moon-solid.svg\": 18,\n\t\"./cloud-showers-heavy-solid.svg\": 19,\n\t\"./cloud-solid.svg\": 20,\n\t\"./cloud-sun-rain-solid.svg\": 21,\n\t\"./cloud-sun-solid.svg\": 22,\n\t\"./moon-solid.svg\": 23,\n\t\"./poo-storm-solid.svg\": 24,\n\t\"./smog-solid.svg\": 25,\n\t\"./snowflake-solid.svg\": 26,\n\t\"./sun-solid.svg\": 27,\n\t\"./temperature-high-solid.svg\": 28,\n\t\"./temperature-low-solid.svg\": 29,\n\t\"./water-solid.svg\": 30,\n\t\"./wind-solid.svg\": 31\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 15;","export default __webpack_public_path__ + \"static/media/bolt-solid.f792c283.svg\";","export default __webpack_public_path__ + \"static/media/cloud-moon-rain-solid.87e9583e.svg\";","export default __webpack_public_path__ + \"static/media/cloud-moon-solid.c56a980e.svg\";","export default __webpack_public_path__ + \"static/media/cloud-showers-heavy-solid.b2dc8624.svg\";","export default __webpack_public_path__ + \"static/media/cloud-solid.0b1e4ffa.svg\";","export default __webpack_public_path__ + \"static/media/cloud-sun-rain-solid.b2acd2bb.svg\";","export default __webpack_public_path__ + \"static/media/cloud-sun-solid.8a3f2652.svg\";","export default __webpack_public_path__ + \"static/media/moon-solid.a3325cc3.svg\";","export default __webpack_public_path__ + \"static/media/poo-storm-solid.8bb82d47.svg\";","export default __webpack_public_path__ + \"static/media/smog-solid.8630408b.svg\";","export default __webpack_public_path__ + \"static/media/snowflake-solid.285e8037.svg\";","export default __webpack_public_path__ + \"static/media/sun-solid.b288121d.svg\";","export default __webpack_public_path__ + \"static/media/temperature-high-solid.82b1e298.svg\";","export default __webpack_public_path__ + \"static/media/temperature-low-solid.63e86ea4.svg\";","export default __webpack_public_path__ + \"static/media/water-solid.1cc5b8e5.svg\";","export default __webpack_public_path__ + \"static/media/wind-solid.b90c8e83.svg\";","import React from 'react'\n\nexport const CityDate = (props) => (\n    <div id=\"cityAndDate\" className=\"cityAndDate text-center\">\n      <div className=\"city\">\n        {props.city && props.country && (\n          <p>\n            {props.city}, {props.country}\n          </p>\n        )}\n      </div>\n      <div className=\"date\">\n        {props.time && <p>{props.time}</p>}\n      </div>\n    </div>\n  );","import React from 'react';\n\nexport const MainInfo = (props) => (\n  <div id=\"main-info\">\n    <div className=\"text-left px-3\">\n      {props.temperature && (\n        <p className=\"main-key\">\n          Temperature:{' '}\n          <span className=\"main-value\">\n            {props.temperature}\n            <sup>&deg;</sup>\n            <span className=\"unit\">C</span>\n          </span>\n        </p>\n      )}\n      {props.description && (\n        <p className=\"main-key\">\n          Conditions: <span className=\"main-value\">{props.description}</span>\n        </p>\n      )}\n    </div>\n  </div>\n);\n","import React from 'react';\n\nexport const SearchField = props => (\n  <form onSubmit={props.getWeather} className=\"form-inline searchField\">\n    <input\n      className=\"form-control mr-2\"\n      type=\"text\"\n      id=\"city\"\n      placeholder=\"City\"\n    />\n    <input\n      className=\"form-control mr-2\"\n      type=\"text\"\n      id=\"country\"\n      placeholder=\"Country Code\"\n    />\n\n    <button id=\"get\" className=\"btn btn-light\" type=\"submit\">\n      Search\n    </button>\n  </form>\n);","import React from 'react';\n\nexport const WeatherIcon = (props) => {\n  if (props.icon !== undefined) {\n    return (\n      <div id=\"weather-icon\">\n        <img\n          src={require(\n            `../../../assets/icons/${props.icon}.svg`\n          ).default}\n          alt={props.description}\n          className=\"filter-white\"\n        />\n      </div>\n    );\n  } else {\n    return <div id=\"weather-icon\" />;\n  }\n};\n","import React, { useState, useEffect } from 'react'\n\nimport { CityDate } from \"../layout/cityDate/CityDate\";\nimport { MainInfo } from \"../layout/mainInfo/MainInfo\";\nimport { SearchField } from \"../layout/searchField/SearchField\";\nimport { WeatherIcon } from \"../layout/weatherIcon/WeatherIcon\";\n\nconst API_KEY = \"4a64ed09d073cdac231c53e1a3b62181\";\n\n\nexport const WeatherApp = () => {\n    const [background, setBackground] = useState('sky-gradient-11')\n    const [city, setCity] = useState()\n    const [country, setCountry] = useState()\n    // const [date, setDate] = useState()\n    const [description, setDescription] = useState()\n    const [feelslike, setFeelslike] = useState()\n    const [humidity, setHumidity] = useState()\n    const [icon, setIcon] = useState()\n    const [latitude, setLatitude] = useState()\n    const [longitude, setLongitude] = useState()\n    const [sunrise, setSunrise] = useState()\n    const [sunset, setSunset] = useState()\n    const [temp_min, setTemp_min] = useState()\n    const [temp_max, setTemp_max] = useState()\n    const [temperature, setTemperature] = useState(0)\n    const [time, setTime] = useState()\n    const [wind, setWind] = useState()\n    const [windDegrees, setWindDegrees] = useState()\n\n    useEffect(() => {\n        const getWeather = async (e) => {\n            \n            const api_call = await fetch(\n                `https://api.openweathermap.org/data/2.5/weather?q=sydney,au&appid=${API_KEY}&units=metric`\n            );\n                \n            const data = await api_call.json();\n                \n            console.log(data);\n            \n            setBackground(backgroundConverter(data.weather[0].icon))\n            setCity(data.name)\n            setCountry(data.sys.country)\n            // setDate(data.dt)\n            setDescription(data.weather[0].description)\n            setFeelslike(data.main.feels_like)\n            setHumidity(data.main.humidity)\n            setIcon(iconConverter(data.weather[0].icon))\n            setLatitude(data.coord.lat)\n            setLongitude(data.coord.lon)\n            setSunrise(timeConverter(data.sys.sunrise))\n            setSunset(timeConverter(data.sys.sunset))\n            setTemp_min(data.main.temp_min)\n            setTemp_max(data.main.temp_max)\n            setTemperature(Math.floor(data.main.temp))\n            setTime(timeConverter(data.dt))\n            setWind(data.wind.speed)\n            setWindDegrees(data.wind.deg)\n\n    \n            // console.log(\"Background is: \", background);\n            // console.log(\"City is: \", city);\n            // console.log(\"Country is: \", country);\n            // console.log(\"Description is: \", description);\n            // console.log(\"Feelslike is: \", feelslike);\n            // console.log(\"Humidity is: \", humidity);\n            // console.log(\"Icon is: \", icon);\n            // console.log(\"Latitude is: \", latitude);\n            // console.log(\"Longitude is: \", longitude);\n            // console.log(\"Sunrise is: \", sunrise);\n            // console.log(\"Sunset is: \", sunset);\n            // console.log(\"Temp_min is: \", temp_min);\n            // console.log(\"Temp_max is: \", temp_max);\n            // console.log(\"Temperature is: \", temperature);\n            // console.log(\"Time is: \", time);\n            // console.log(\"Wind is: \", wind);\n            // console.log(\"Wind Degrees is: \", windDegrees);\n        }\n        getWeather()    \n    }, [])\n\n    const backgroundConverter = (icon) => {\n        const weatherBackground = {\n            '01d': 'sky-gradient-11',\n            '02d': 'sky-gradient-09',\n            '03d': 'sky-gradient-13',\n            '04d': 'sky-gradient-14',\n            '09d': 'sky-gradient-14',\n            '10d': 'sky-gradient-15',\n            '11d': 'sky-gradient-15',\n            '13d': 'sky-gradient-09',\n            '50d': 'sky-gradient-08',\n            '01n': 'sky-gradient-05',\n            '02n': 'sky-gradient-21',\n            '03n': 'sky-gradient-03',\n            '04n': 'sky-gradient-03',\n            '09n': 'sky-gradient-22',\n            '10n': 'sky-gradient-03',\n            '11n': 'sky-gradient-21',\n            '13n': 'sky-gradient-02',\n            '50n': 'sky-gradient-20',\n        };\n\n        return weatherBackground[icon];\n    }\n\n    const iconConverter = (icon) => {\n        const convertIcon = {\n          '01d': 'sun-solid',\n          '02d': 'cloud-sun-solid',\n          '03d': 'cloud-solid',\n          '04d': 'cloud-solid',\n          '09d': 'cloud-sun-rain-solid',\n          '10d': 'cloud-showers-heavy-solid',\n          '11d': 'poo-storm-solid',\n          '13d': 'snowflake-solid',\n          '50d': 'smog-solid',\n          '01n': 'moon-solid',\n          '02n': 'cloud-moon-solid',\n          '03n': 'cloud-solid',\n          '04n': 'cloud-solid',\n          '09n': 'cloud-moon-rain-solid',\n          '10n': 'cloud-showers-heavy-solid',\n          '11n': 'poo-storm-solid',\n          '13n': 'snowflake-solid',\n          '50n': 'smog-solid',\n        };\n        return convertIcon[icon];\n    }\n\n    const timeConverter = (UNIX_timestamp) => {\n        let a = new Date(UNIX_timestamp * 1000);\n        const months = [\n          'Jan',\n          'Feb',\n          'Mar',\n          'Apr',\n          'May',\n          'Jun',\n          'Jul',\n          'Aug',\n          'Sep',\n          'Oct',\n          'Nov',\n          'Dec',\n        ];\n        let year = a.getFullYear();\n        let month = months[a.getMonth()];\n        let day = a.getDate();\n        let hour = a.getHours();\n        let min = (\"0\" + a.getMinutes()).slice(-2);\n        // let sec = a.getSeconds();\n        let time = day + ' ' + month + ' ' + year + ' ' + hour + ':' + min;\n        return time;\n    }\n\n    const getWeather = async (e) => {\n        e.preventDefault();\n\n        const city = e.target.elements.city.value;\n        const country = e.target.elements.country.value;\n        \n        const api_call = await fetch(\n            `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`\n        );\n            \n        const data = await api_call.json();\n            \n        console.log(data);\n        \n        if (city && country) {\n            setBackground(backgroundConverter(data.weather[0].icon))\n            setCity(data.name)\n            setCountry(data.sys.country)\n            // setDate(data.dt)\n            setDescription(data.weather[0].description)\n            setFeelslike(data.main.feels_like)\n            setHumidity(data.main.humidity)\n            setIcon(iconConverter(data.weather[0].icon))\n            setLatitude(data.coord.lat)\n            setLongitude(data.coord.lon)\n            setSunrise(timeConverter(data.sys.sunrise))\n            setSunset(timeConverter(data.sys.sunset))\n            setTemp_min(data.main.temp_min)\n            setTemp_max(data.main.temp_max)\n            setTemperature(Math.floor(data.main.temp))\n            setTime(timeConverter(data.dt))\n            setWind(data.wind.speed)\n            setWindDegrees(data.wind.deg)\n\n            // const zone = await getTimeZone();\n            // setTime(zone.formatted)\n\n          } else {\n            // setCity(\"\")\n            // setCountry(undefined)\n            // // setDate( timeConverter(undefined)\n            // // setIcon( iconConverter()\n            // setHumidity(undefined)\n            // setWind(undefined)\n            // setTemp_min(undefined)\n            // setTemp_max(undefined)\n            // setDescription(undefined)\n            // // setBackground( backgroundConverter()\n            // setLatitude(undefined)\n            // setLongitude(undefined)\n        };\n\n        console.log(\"Background is: \", background);\n        console.log(\"City is: \", city);\n        console.log(\"Country is: \", country);\n        console.log(\"Description is: \", description);\n        console.log(\"Feelslike is: \", feelslike);\n        console.log(\"Humidity is: \", humidity);\n        console.log(\"Icon is: \", icon);\n        console.log(\"Latitude is: \", latitude);\n        console.log(\"Longitude is: \", longitude);\n        console.log(\"Sunrise is: \", sunrise);\n        console.log(\"Sunset is: \", sunset);\n        console.log(\"Temp_min is: \", temp_min);\n        console.log(\"Temp_max is: \", temp_max);\n        console.log(\"Temperature is: \", temperature);\n        console.log(\"Time is: \", time);\n        console.log(\"Wind is: \", wind);\n        console.log(\"Wind Degrees is: \", windDegrees);\n    }\n\n    return (\n        <div className={`screen ${background}`}>\n            <SearchField getWeather={getWeather} />\n            <div className=\"weather-display\">\n                <CityDate \n                    city={city}\n                    country={country}\n                    // date={date}\n                    time={time}\n                />\n                <WeatherIcon icon={icon} description={description} />\n                <MainInfo temperature={temperature} description={description} />\n            </div>\n        </div>\n    )\n}\n","import React from 'react';\n\nimport { WeatherApp } from \"../../weatherApp/WeatherApp\"\n\nexport const Mobile = () => {\n    return (\n      <>\n        <div className=\"center\">\n          {/* iPhone / iPad */}\n          <div className=\"mobile\">\n            <WeatherApp />\n            {/* Home Button */}\n            <div className=\"home\"></div>\n            <div className=\"inner\"></div>\n            {/* Volume */}\n            <ul className=\"volume\">\n              <li></li>\n              <li></li>\n            </ul>\n            <ul className=\"silent\">\n              <li></li>\n            </ul>\n            <ul className=\"sleep\">\n              <li></li>\n            </ul>\n          </div>\n        </div>\n      </>\n    );\n  };","import './App.scss';\n\nimport { Mobile } from './components/pages/mobile/Mobile';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Mobile />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}