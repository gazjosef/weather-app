{"version":3,"sources":["svg sync /^/.*/.svg$","svg/bolt-solid.svg","svg/cloud-moon-rain-solid.svg","svg/cloud-moon-solid.svg","svg/cloud-showers-heavy-solid.svg","svg/cloud-solid.svg","svg/cloud-sun-rain-solid.svg","svg/cloud-sun-solid.svg","svg/moon-solid.svg","svg/poo-storm-solid.svg","svg/smog-solid.svg","svg/snowflake-solid.svg","svg/sun-solid.svg","svg/temperature-high-solid.svg","svg/temperature-low-solid.svg","svg/water-solid.svg","svg/wind-solid.svg","SearchField/SearchField.tsx","MainInfo/MainInfo.tsx","CityDate/CityDate.tsx","WeatherIcon/WeatherIcon.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","SearchField","props","onSubmit","getWeather","className","type","placeholder","MainInfo","temperature","description","CityDate","city","country","date","WeatherIcon","console","log","undefined","icon","src","require","alt","API_KEY","TIMEZONE_KEY","App","state","humidity","wind","temp_min","temp_max","error","background","latitude","longitude","a","preventDefault","target","elements","value","fetch","api_call","json","data","setState","main","temp","name","sys","timeConverter","dt","iconConverter","weather","speed","backgroundConverter","coord","lat","lon","getTimeZone","long","timezone_api_call","zone","UNIX_timestamp","Date","year","getFullYear","month","getMonth","getDate","getHours","getMinutes","this","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8985cdb4.chunk.js","sourcesContent":["var map = {\n\t\"./bolt-solid.svg\": 25,\n\t\"./cloud-moon-rain-solid.svg\": 26,\n\t\"./cloud-moon-solid.svg\": 27,\n\t\"./cloud-showers-heavy-solid.svg\": 28,\n\t\"./cloud-solid.svg\": 29,\n\t\"./cloud-sun-rain-solid.svg\": 30,\n\t\"./cloud-sun-solid.svg\": 31,\n\t\"./moon-solid.svg\": 32,\n\t\"./poo-storm-solid.svg\": 33,\n\t\"./smog-solid.svg\": 34,\n\t\"./snowflake-solid.svg\": 35,\n\t\"./sun-solid.svg\": 36,\n\t\"./temperature-high-solid.svg\": 37,\n\t\"./temperature-low-solid.svg\": 38,\n\t\"./water-solid.svg\": 39,\n\t\"./wind-solid.svg\": 40\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 24;","module.exports = __webpack_public_path__ + \"static/media/bolt-solid.42de93f8.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-moon-rain-solid.605657a2.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-moon-solid.7c556317.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-showers-heavy-solid.904783b4.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-solid.3052c53b.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-sun-rain-solid.52915221.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud-sun-solid.e4a580d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/moon-solid.399b1420.svg\";","module.exports = __webpack_public_path__ + \"static/media/poo-storm-solid.eb9ea3c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/smog-solid.c791d5cb.svg\";","module.exports = __webpack_public_path__ + \"static/media/snowflake-solid.d9f64049.svg\";","module.exports = __webpack_public_path__ + \"static/media/sun-solid.aa59b8a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/temperature-high-solid.1de813e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/temperature-low-solid.dcbbcdd1.svg\";","module.exports = __webpack_public_path__ + \"static/media/water-solid.ab90635d.svg\";","module.exports = __webpack_public_path__ + \"static/media/wind-solid.b3304a3d.svg\";","import React from \"react\";\r\nimport \"./SearchField.css\";\r\n\r\nconst SearchField = (props: any) => (\r\n  <form onSubmit={props.getWeather} className=\"form-inline searchField\">\r\n    <input\r\n      className=\"form-control mr-2\"\r\n      type=\"text\"\r\n      id=\"city\"\r\n      placeholder=\"City\"\r\n    />\r\n    <input\r\n      className=\"form-control mr-2\"\r\n      type=\"text\"\r\n      id=\"country\"\r\n      placeholder=\"Country Code\"\r\n    />\r\n\r\n    <button id=\"get\" className=\"btn btn-light\" type=\"submit\">\r\n      Search\r\n    </button>\r\n  </form>\r\n);\r\n\r\nexport default SearchField;\r\n","import React from \"react\";\r\nimport \"./MainInfo.css\";\r\n\r\nconst MainInfo = (props: any) => (\r\n  <div id=\"main-info\">\r\n    {/* {\r\n    <div className=\"text-left px-3\">\r\n      {props.temperature && (\r\n        <h5>\r\n          Temperature: {props.temperature}\r\n          <sup>&deg;</sup>\r\n          <span className=\"unit\">C</span>\r\n        </h5>\r\n      )}\r\n      {props.description && <h5>Conditions: {props.description}</h5>}\r\n    </div>\r\n    } */}\r\n    <div className=\"text-left px-3\">\r\n      {props.temperature && (\r\n        <p className=\"main-key\">\r\n          Temperature:{\" \"}\r\n          <span className=\"main-value\">\r\n            {props.temperature}\r\n            <sup>&deg;</sup>\r\n            <span className=\"unit\">C</span>\r\n          </span>\r\n        </p>\r\n      )}\r\n      {props.description && (\r\n        <p className=\"main-key\">\r\n          Conditions: <span className=\"main-value\">{props.description}</span>\r\n        </p>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MainInfo;\r\n","import React from \"react\";\r\nimport \"./CityDate.css\";\r\n\r\nconst CityDate = (props: any) => (\r\n  <div id=\"cityAndDate\" className=\"text-center\">\r\n    <div className=\"city\">\r\n      {props.city && props.country && (\r\n        <p>\r\n          {props.city}, {props.country}\r\n        </p>\r\n      )}\r\n    </div>\r\n    <div className=\"date\">{props.date && <p>{props.date}</p>}</div>\r\n  </div>\r\n);\r\n\r\nexport default CityDate;\r\n","import React from \"react\";\r\nimport \"./WeatherIcon.css\";\r\nimport \"../svg/sun-solid.svg\";\r\n\r\nconst WeatherIcon = (props: any) => {\r\n  console.log(props);\r\n\r\n  if (props.icon !== undefined) {\r\n    return (\r\n      <div id=\"weather-icon\">\r\n        <img\r\n          src={require(`../svg/${props.icon}.svg`)}\r\n          alt={props.description}\r\n          className=\"filter-white\"\r\n        />\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div id=\"weather-icon\" />;\r\n  }\r\n};\r\n\r\nexport default WeatherIcon;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"./iPhone.css\";\nimport \"./weather-background.css\";\n\nimport SearchField from \"./SearchField/SearchField\";\n// import SecondaryInfo from \"./SecondaryInfo/SecondaryInfo\";\nimport MainInfo from \"./MainInfo/MainInfo\";\nimport CityDate from \"./CityDate/CityDate\";\nimport WeatherIcon from \"./WeatherIcon/WeatherIcon\";\nimport { async } from \"q\";\n\n// OpenWeather API\nconst API_KEY = \"4a64ed09d073cdac231c53e1a3b62181\";\nconst TIMEZONE_KEY = \"DKEKJ5WGOS2H\";\n\nclass App extends React.Component {\n  state = {\n    temperature: undefined,\n    city: undefined,\n    country: undefined,\n    date: undefined,\n    icon: undefined,\n    humidity: undefined,\n    wind: undefined,\n    temp_min: undefined,\n    temp_max: undefined,\n    description: undefined,\n    error: undefined,\n    background: \"sky-gradient-11\",\n    latitude: undefined,\n    longitude: undefined\n  };\n\n  timeConverter(UNIX_timestamp: number) {\n    let a = new Date(UNIX_timestamp * 1000);\n    const months = [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ];\n    let year = a.getFullYear();\n    let month = months[a.getMonth()];\n    let date = a.getDate();\n    let hour = a.getHours();\n    let min = a.getMinutes();\n    // let sec = a.getSeconds();\n    let time = date + \" \" + month + \" \" + year + \" \" + hour + \":\" + min;\n    return time;\n  }\n\n  iconConverter(icon: string) {\n    const convertIcon: any = {\n      \"01d\": \"sun-solid\",\n      \"02d\": \"cloud-sun-solid\",\n      \"03d\": \"cloud-solid\",\n      \"04d\": \"cloud-solid\",\n      \"09d\": \"cloud-sun-rain-solid\",\n      \"10d\": \"cloud-showers-heavy-solid\",\n      \"11d\": \"poo-storm-solid\",\n      \"13d\": \"snowflake-solid\",\n      \"50d\": \"smog-solid\",\n      \"01n\": \"moon-solid\",\n      \"02n\": \"cloud-moon-solid\",\n      \"03n\": \"cloud-solid\",\n      \"04n\": \"cloud-solid\",\n      \"09n\": \"cloud-moon-rain-solid\",\n      \"10n\": \"cloud-showers-heavy-solid\",\n      \"11n\": \"poo-storm-solid\",\n      \"13n\": \"snowflake-solid\",\n      \"50n\": \"smog-solid\"\n    };\n    return convertIcon[icon];\n  }\n\n  getWeather = async (e: any) => {\n    e.preventDefault();\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n\n    const api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`\n    );\n    const data = await api_call.json();\n\n    if (city && country) {\n      console.log(data);\n      this.setState({\n        temperature: data.main.temp,\n        city: data.name,\n        country: data.sys.country,\n        date: this.timeConverter(data.dt),\n        icon: this.iconConverter(data.weather[0].icon),\n        humidity: data.main.humidity,\n        wind: data.wind.speed,\n        temp_min: data.main.temp_min,\n        temp_max: data.main.temp_max,\n        description: data.weather[0].description,\n        background: this.backgroundConverter(data.weather[0].icon),\n        latitude: data.coord.lat,\n        longitude: data.coord.lon\n      });\n    } else {\n      this.setState({\n        temperature: undefined,\n        city: undefined,\n        country: undefined,\n        date: undefined,\n        icon: undefined,\n        humidity: undefined,\n        wind: undefined,\n        temp_min: undefined,\n        temp_max: undefined,\n        description: undefined,\n        background: undefined,\n        latitude: undefined,\n        longitude: undefined\n      });\n    }\n  };\n\n  getTimeZone = async () => {\n    const lat = this.state.latitude;\n    const long = this.state.longitude;\n\n    const timezone_api_call = await fetch(\n      `http://api.timezonedb.com/v2.1/get-time-zone?key=${TIMEZONE_KEY}&format=xml&by=position&lat=${lat}&lng=${long}`\n    );\n\n    const zone = await timezone_api_call.json();\n    return zone;\n  };\n\n  backgroundConverter(icon: string) {\n    const weatherBackground: any = {\n      \"01d\": \"sky-gradient-11\",\n      \"02d\": \"sky-gradient-11\",\n      \"03d\": \"sky-gradient-13\",\n      \"04d\": \"sky-gradient-14\",\n      \"09d\": \"sky-gradient-14\",\n      \"10d\": \"sky-gradient-15\",\n      \"11d\": \"sky-gradient-15\",\n      \"13d\": \"sky-gradient-09\",\n      \"50d\": \"sky-gradient-08\",\n      \"01n\": \"sky-gradient-05\",\n      \"02n\": \"sky-gradient-03\",\n      \"03n\": \"sky-gradient-03\",\n      \"04n\": \"sky-gradient-03\",\n      \"09n\": \"sky-gradient-22\",\n      \"10n\": \"sky-gradient-03\",\n      \"11n\": \"sky-gradient-21\",\n      \"13n\": \"sky-gradient-02\",\n      \"50n\": \"sky-gradient-20\"\n    };\n    return weatherBackground[icon];\n  }\n\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"wrapper\">\n        <div className=\"center\">\n          {/* iPhone / iPad */}\n          <div className=\"mobile\">\n            {/* Screen */}\n            <div className={`screen ${this.state.background}`}>\n              <SearchField getWeather={this.getWeather} />\n              <div className=\"weather-display\">\n                <CityDate\n                  city={this.state.city}\n                  country={this.state.country}\n                  date={this.state.date}\n                />\n                <WeatherIcon\n                  icon={this.state.icon}\n                  description={this.state.description}\n                />\n                <MainInfo\n                  temperature={this.state.temperature}\n                  description={this.state.description}\n                />\n              </div>\n            </div>\n            {/* Home Button */}\n            <div className=\"home\"></div>\n            <div className=\"inner\"></div>\n            {/* Volume */}\n            <ul className=\"volume\">\n              <li></li>\n              <li></li>\n            </ul>\n            <ul className=\"silent\">\n              <li></li>\n            </ul>\n            <ul className=\"sleep\">\n              <li></li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}